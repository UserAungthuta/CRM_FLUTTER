import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_messaging/firebase_messaging.dart';

import 'firebase_options.dart'; // IMPORTANT: This file is generated by `flutterfire configure`
import 'screens/mobile/mobile_splash_screen.dart';
import 'screens/mobile/auth/mobile_login_screen.dart';
import 'screens/mobile/auth/mobile_forgot_password_screen.dart';
import 'screens/mobile/dashboard/mobile_superadmin_dashboard_screen.dart';
import 'screens/mobile/settings/mobile_settings_screen.dart';
import 'screens/mobile/settings/mobile_settings_country_screen.dart';
import 'screens/mobile/settings/mobile_settings_warning_screen.dart';
import 'screens/mobile/settings/mobile_settings_terms_screen.dart';
import 'screens/mobile/auth/mobile_profile_screen.dart';
import 'screens/mobile/users/mobile_settings_users_screen.dart';
import 'screens/mobile/users/mobile_assign_engineer_screen.dart';
import 'screens/mobile/products/mobile_products_screen.dart';
import 'screens/mobile/products/mobile_assigned_products_screen.dart';
import 'screens/mobile/dashboard/mobile_customer_dashboard_screen.dart';
import 'screens/mobile/dashboard/mobile_engineer_dashboard_screen.dart';
import 'screens/mobile/reports/mobile_engineer_reports.dart';
import 'screens/mobile/reports/mobile_engineer_reports_solved.dart';
import 'screens/mobile/reports/mobile_admin_reports_solved.dart';
import 'screens/mobile/reports/mobile_admin_reports_unsolved.dart';
import 'screens/mobile/reports/mobile_customer_reports_solved.dart';
import 'screens/mobile/reports/mobile_customer_reports_unsolved.dart';
import 'screens/mobile/reports/mobile_engineer_reports_unsolved.dart';
import 'screens/mobile/reports/mobile_customer_reports.dart';
import 'screens/mobile/auth/mobile_notification_screen.dart';
import 'screens/mobile/reports/mobile_admin_reports.dart';
import 'screens/mobile/maintenance/mobile_maintenance_screen.dart';

// IMPORTANT: A top-level function to handle background messages.
@pragma('vm:entry-point')
Future<void> _firebaseMessagingBackgroundHandler(RemoteMessage message) async {
  await Firebase.initializeApp();
  print("Handling a background message: ${message.messageId}");
}

// Ensure this utility is correctly implemented

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  FirebaseMessaging.onBackgroundMessage(_firebaseMessagingBackgroundHandler);

  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Rehlko Customer Care App',
      theme: _buildTheme(),
      initialRoute: '/',
      routes: _getRoutes(),
      debugShowCheckedModeBanner: false,
    );
  }

  ThemeData _buildTheme() {
    return ThemeData(
      primarySwatch: Colors.blue,
      visualDensity: VisualDensity.adaptivePlatformDensity,
      appBarTheme: const AppBarTheme(elevation: 1),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 12),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(25),
          ),
        ),
      ),
    );
  }
}

Map<String, WidgetBuilder> _getRoutes() {
  return {
    '/': (context) => const SplashScreen(),
    '/mobile_login': (context) => const LoginScreen(),
    '/mobile_forgot_password': (context) => const MobileForgotPasswordScreen(),
    '/mobile_profile': (context) => const MobileProfileScreen(),
    '/mobile_notifications': (context) => const MobileNotificationScreen(),
    '/mobile_superadmin-dashboard': (context) =>
        const MobileSuperAdminDashboardScreen(),
    '/mobile_customer-dashboard': (context) =>
        const MobileCustomerDashboardScreen(),
    '/mobile_engineer-dashboard': (context) =>
        const MobileEngineerDashboardScreen(),
    '/mobile_products': (context) => const MobileProductsScreen(),
    '/mobile_assigned_products': (context) =>
        const MobileAssignedProductsScreen(),
    '/mobile_settings': (context) => const MobileSettingsScreen(),
    '/mobile_settings/country': (context) =>
        const MobileSettingsCountryScreen(),
    '/mobile_settings/warning': (context) =>
        const MobileSettingsWarningScreen(),
    '/mobile_settings/policy': (context) => const MobileSettingsTermsScreen(),
    '/mobile_users': (context) => const MobileUserScreen(),
    '/mobile_support_team': (context) => const MobileAssignEngineerScreen(),
    '/mobile_reports': (context) => const MobileAdminReportScreen(),
    '/mobile_customer_reports': (context) => const MobileCustomerReportScreen(),
    '/mobile_engineer_reports': (context) => const MobileEngineerReportScreen(),
    '/mobile_admin_solved_reports': (context) =>
        const MobileAdminSolvedReportScreen(),
    '/mobile_admin_unsolved_reports': (context) =>
        const MobileAdminUnSolvedReportScreen(),
    '/mobile_customer_solved_reports': (context) =>
        const MobileCustomerSolvedReportScreen(),
    '/mobile_customer_unsolved_reports': (context) =>
        const MobileCustomerUnSolvedReportScreen(),
    '/mobile_engineer_solved_reports': (context) =>
        const MobileEngineerSolvedReportScreen(),
    '/mobile_engineer_unsolved_reports': (context) =>
        const MobileEngineerUnSolvedReportScreen(),
    '/mobile_maintenance': (context) => const MobileMaintenanceScreen(),
  };
}
